#!/bin/sh

# shell does not source bashrc
# shellcheck disable=1090
# shellcheck disable=1091
[ -f "$HOME"/.dotfiles/xdgdirs ] && . "$HOME"/.dotfiles/xdgdirs

FILENAME="$XDG_CACHE_HOME/corona"
DBFILE="$XDG_DATA_HOME/dbcorona"
URL="https://corona-stats.online/GB"

today=$(date -I)
epochnow=$(date +%s)

inetcheck() { wget --quiet --spider https://google.com; }
download() { curl --silent "$URL" > "$FILENAME"; }

# If the file doesn't exist or is more than 3600 seconds old, download it again.
{
    [ -f "$FILENAME" ] &&
    [ -s "$FILENAME" ] &&
    [ $(($(date +%s)-$(stat -c %Y "$FILENAME"))) -lt 3600 ];
} || {
    inetcheck && download;
}

result=$(grep -E -i "UK" "$FILENAME" |
    sed -r "s/[[:cntrl:]]\[[0-9]{1,3}m//g" |
    sed "s/\s*//g ; s/â•‘//g ; s/â”‚/;/g ; s/â–²//g" |
    awk -F';' '{print $3 " (ðŸ˜·"$8") (+"$4")", "ðŸ’€" $5 " (+"$6")"}')

echo "$result"

hour=$(date +%H)
if [ "$hour" -ge 16 ]; then # This is a hack to get around outdated info
    cases=$(echo "$result" | cut -d' ' -f3 | tr -d '(+,)')
    deaths=$(echo "$result" | cut -d' ' -f5 | tr -d '(+,)')
    [ "$cases" = "" ] && exit
    [ "$deaths" = "" ] && deaths=0
#    [ "$cases" = "" ] || [ "$deaths" = "" ] && exit # Don't add to file if c/d info missing
    # TODO: Add cum_cases & cum_deaths?
    dbresult="$today,$epochnow,$cases,$deaths"

    mostrecent=$(tail -n1 "$DBFILE" | cut -d',' -f1)
    lastepoch=$(tail -n1 "$DBFILE" | cut -d',' -f2)

    # If the latest entry is not for today, and the last entry is at least 18
    # hours old, then add the new data for today to the end of the database file
    if [ "$mostrecent" != "$today" ] &&
       [ $((epochnow - lastepoch)) -ge $((18*60*60)) ]; then
        echo "$dbresult" >> "$DBFILE"
    fi
fi
